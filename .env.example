# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=development
PORT=3000

# =============================================================================
# AUTHENTICATION (⚠️ CRITICAL SECURITY)
# =============================================================================
# Generate a strong token with at least 32 characters (64+ recommended for production)
# 
# Quick generate:
#   bun run scripts/generate-token.ts 64
# Or:
#   node -e "console.log(require('crypto').randomBytes(64).toString('base64url'))"
#
# Requirements:
#   - Minimum 32 characters (64+ for production)
#   - At least 16 unique characters
#   - Mix of uppercase, lowercase, numbers, and special chars
#   - NEVER use weak tokens like "token123" or "admin"
#
# ⚠️ WARNING: Do NOT commit actual tokens to git!
STATIC_AUTH_TOKEN=

# =============================================================================
# KEYSTORE CONFIGURATION (⚠️ CRITICAL)
# =============================================================================
# Required for APK signing
# Place your keystore file in ./keys/ directory
# The keystore file should NOT be committed to git (.gitignore handles this)
KEYSTORE_PATH=/app/keys/genotek_upload.jks
KEYSTORE_PASSWORD=
KEY_ALIAS=
KEY_PASSWORD=

# =============================================================================
# FILE UPLOAD SETTINGS
# =============================================================================
# Directory for uploaded and signed files
UPLOAD_DIR=/app/uploads

# Maximum file size in bytes (default: 200MB)
MAX_FILE_SIZE=209715200

# How long to keep files before cleanup (hours)
FILE_RETENTION_HOURS=24

# Maximum number of files per directory (prevents DoS)
MAX_FILES_PER_DIRECTORY=10

# =============================================================================
# SSL/TLS CONFIGURATION (Optional but recommended for production)
# =============================================================================
# Enable SSL/TLS
SSL_ENABLED=false

# Domain for Let's Encrypt certificate (leave empty for self-signed in dev)
SSL_DOMAIN=

# Email for Let's Encrypt notifications
SSL_EMAIL=

# Use Let's Encrypt staging environment for testing (true) or production (false)
SSL_STAGING=true

# Directory for SSL certificates
SSL_CERT_DIR=/app/certs

# HTTP port (for ACME challenges)
HTTP_PORT=80

# HTTPS port
HTTPS_PORT=443

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. NEVER commit .env file to version control
# 2. Use different tokens for dev/staging/production
# 3. Rotate tokens periodically (recommended: every 90 days)
# 4. Store production secrets in a secrets manager (Vault, AWS Secrets, etc.)
# 5. Use SSL/TLS in production (SSL_ENABLED=true)
# 6. Review security audit documentation: SECURITY_AUDIT_SUMMARY.md
# 7. Follow implementation guide: SECURITY_IMPLEMENTATION_GUIDE.md

# =============================================================================
# PRODUCTION CHECKLIST
# =============================================================================
# Before deploying to production:
# [ ] Generate strong tokens (64+ characters)
# [ ] Enable SSL (SSL_ENABLED=true)
# [ ] Set real domain (SSL_DOMAIN=your-domain.com)
# [ ] Use production Let's Encrypt (SSL_STAGING=false)
# [ ] Store secrets in a secrets manager
# [ ] Review all security settings
# [ ] Test with security scanner (OWASP ZAP)
# [ ] Enable monitoring and alerting
# [ ] Backup keystore file securely
# [ ] Document recovery procedures
